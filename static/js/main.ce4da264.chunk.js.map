{"version":3,"sources":["CeleryIcon.svg","hooks/useStore.ts","SalaryBox.tsx","App.tsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ActionType","StartingUnit","createElement","d","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","nameIndex","initialState","window","localStorage","getItem","JSON","parse","salaries","generateId","name","hourlyRate","salary","reduceState","state","action","type","payload","AddSalary","RemoveSalary","SetHourlyRate","data","Number","isNaN","calculateSalary","SetName","reducer","newState","setItem","stringify","useStore","useReducer","React","memo","dispatch","Paper","Box","padding","Grid","container","spacing","item","sm","xs","TextField","placeholder","color","value","marginBottom","inputProps","fontSize","onChange","event","variant","autoComplete","autoFocus","InputProps","startAdornment","InputAdornment","position","endAdornment","flex","toFixed","replace","Button","onClick","Layout","styled","div","TopNav","Toolbar","process","useState","minSalary","setMinSalary","maxSalary","setMaxSalary","AppBar","Typography","component","fontWeight","SvgIcon","marginLeft","verticalAlign","Container","height","maxHeight","display","flexDirection","direction","entries","map","Grow","in","size","endIcon","AddCircleOutline","marginTop","Slider","track","min","max","values","valueLabelFormat","val","Math","floor","valueLabelDisplay","justify","e","Boolean","location","hostname","match","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","responsiveFontSizes","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce4da264.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M511.996,245.866l-65.059-39.121l8.529-22.822l-0.071-0.027c5.41-3.978,10.784-8.645,16.179-14.042l17.831-17.838 l-61.131-22.201l10.7-57.672l-57.637,10.718l-22.214-61.122l-17.831,17.817c-4.269,4.266-10.384,10.383-16.226,18.151 l-19.794,7.368L266.131,0l-22.346,54.127l-58.118-40.495l4.805,37.372c2.188,17.059,4.818,37.564,13.533,56.35L42.408,268.951 c-25.364,25.355-39.493,52.092-41.996,79.47c-3.281,35.896,13.207,72.247,48.96,107.997l6.16,6.176 c32.824,32.821,66.109,49.407,99.087,49.405c2.988-0.001,5.979-0.137,8.961-0.41c27.373-2.504,54.113-16.631,79.477-41.992 l161.594-161.592c18.855,8.758,39.436,11.369,56.557,13.541l37.12,4.718l-40.463-58.056L511.996,245.866z M32.395,351.344 c1.801-19.698,12.808-39.778,32.719-59.682L244.38,112.4l-7.041-10.897c-3.616-5.597-6.272-11.887-8.302-18.509l29.183,20.334 l13.262-32.124l20.013,33.27l16.595-6.177c-0.563,5.883-0.377,12.097,0.85,18.637c-31.588,31.555-168.455,168.281-192.748,192.582 c-28.354,28.346-52.132,72.703-47.215,121.021C42.421,402.95,30.113,376.323,32.395,351.344z M104.359,389.927 c8.357-29.268,26.938-50.101,34.542-57.703c27.356-27.362,197.513-197.342,199.228-199.055l7.051-7.043l-3.182-9.445 c-4.189-12.437-1.721-23.362,5.044-34.161l13.408,36.893l38.416-7.144l-7.133,38.441l35.818,13.008 c-10.452,5.542-22.819,8.119-36.741,2.839l-9.701-3.677l-7.34,7.332c-1.727,1.725-173.004,172.808-200.381,200.185 c-8.242,8.242-35.576,32.797-72.546,37.694C101.446,402.082,102.618,396.024,104.359,389.927z M429.013,282.979 c-6.614-2.029-12.901-4.687-18.494-8.306l-10.899-7.054l-179.271,179.27c-34.696,34.691-68.864,41.999-105.341,21.79 c-5.523-9.315-9.501-18.828-11.898-28.511c47.973-5.68,82.632-36.702,92.988-47.057c24.237-24.238,161.307-161.156,193.577-193.39 c8.361,1.938,16.745,2.383,25.102,1.338l-7.269,19.45l33.272,20.008l-32.121,13.259L429.013,282.979z\"\n})));\n\nvar SvgCeleryIcon = function SvgCeleryIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCeleryIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/CeleryIcon.8ccebf47.svg\";\nexport { ForwardRef as ReactComponent };","import { useReducer } from 'react';\nimport { v4 as generateId } from 'uuid';\n\nexport enum ActionType {\n    AddSalary = 'addSalary',\n    RemoveSalary = 'removeSalary',\n    SetHourlyRate = 'setHourlyRate',\n    SetName = 'setName'\n}\n\nexport enum StartingUnit {\n    PerHour = '/hour',\n    PerDay = '/day',\n    PerMonth = '/month',\n    PerYear = '/year'\n}\n\nexport interface SalaryState {\n    name: string;\n    hourlyRate: string;\n    salary: number;\n}\n\nexport interface State {\n    salaries: {\n        [x: string]: SalaryState;\n    };\n}\n\nexport interface Action {\n    type: ActionType;\n    payload?: any;\n    id?: string;\n}\n\nlet nameIndex = 1;\n\n// Grab initialState from persistedState in localStorage if exists\n// TODO: Watch window.onfocus/onblur to keep things current, mark store with uniqueID (new Date())\nconst initialState: State = window.localStorage.getItem('persistedState')\n    ? JSON.parse(window.localStorage.getItem('persistedState') || '{}')\n    : {\n          salaries: {\n              [generateId()]: {\n                  name: `Company${nameIndex}`,\n                  hourlyRate: '',\n                  salary: 0\n              }\n          }\n      };\n\nconst reduceState = (state: State, action: Action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ActionType.AddSalary:\n            nameIndex++;\n\n            return {\n                ...state,\n                salaries: {\n                    ...state.salaries,\n                    [generateId()]: {\n                        name: `Company${nameIndex}`,\n                        hourlyRate: '',\n                        salary: 0\n                    }\n                }\n            };\n\n        case ActionType.RemoveSalary:\n            nameIndex++;\n\n            const { [payload.id]: _, ...salaries } = state.salaries;\n\n            return {\n                ...state,\n                salaries\n            };\n\n        case ActionType.SetHourlyRate:\n            // Enforce numericality\n            const hourlyRate = payload.data;\n            if (hourlyRate.length && Number.isNaN(Number(hourlyRate))) {\n                return state;\n            }\n\n            return {\n                ...state,\n                salaries: {\n                    ...state.salaries,\n                    [payload.id]: {\n                        ...state.salaries[payload.id],\n                        hourlyRate,\n                        salary: calculateSalary(Number(hourlyRate))\n                    }\n                }\n            };\n\n        case ActionType.SetName:\n            return {\n                ...state,\n                salaries: {\n                    ...state.salaries,\n                    [payload.id]: {\n                        ...state.salaries[payload.id],\n                        name: payload.data\n                    }\n                }\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst reducer: React.Reducer<State, Action> = (\n    state = initialState,\n    action\n) => {\n    const newState = reduceState(state, action);\n\n    localStorage.setItem('persistedState', JSON.stringify(newState));\n\n    return newState;\n};\n\nexport const calculateSalary = (hourlyRate: number) => {\n    if (!hourlyRate) return 0;\n\n    // Every day in the year, minus weekends\n    return hourlyRate * 8 * (365.25 - 52 * 2);\n};\n\nconst useStore = () =>\n    useReducer<React.Reducer<State, Action>>(reducer, initialState);\n\nexport default useStore;\n","import React from 'react';\nimport {\n    TextField,\n    InputAdornment,\n    Grid,\n    Paper,\n    Button,\n    Box\n} from '@material-ui/core';\nimport { Action, ActionType } from './hooks/useStore';\n\ninterface SalaryBoxProps {\n    id: string;\n    name: string;\n    hourlyRate: string;\n    salary: number;\n    dispatch: (action: Action) => void;\n}\n\nconst SalaryBox: React.FunctionComponent<SalaryBoxProps> = ({\n    id,\n    name,\n    hourlyRate,\n    salary = 0,\n    dispatch,\n    ...props\n}) => {\n    return (\n        <Paper {...props}>\n            <Box style={{ padding: '1em' }}>\n                <Grid container spacing={2}>\n                    <Grid item sm={4} xs={12}>\n                        <TextField\n                            name=\"name\"\n                            placeholder=\"Untitled\"\n                            color=\"secondary\"\n                            value={name}\n                            style={{\n                                marginBottom: 15\n                            }}\n                            inputProps={{ style: { fontSize: '1.5em' } }}\n                            onChange={(\n                                event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                                dispatch({\n                                    type: ActionType.SetName,\n                                    payload: {\n                                        id,\n                                        data: event.target.value\n                                    }\n                                });\n                            }}\n                        />\n                        <TextField\n                            name=\"hourlyRate\"\n                            variant=\"outlined\"\n                            autoComplete=\"off\"\n                            value={hourlyRate}\n                            onChange={(\n                                event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                                dispatch({\n                                    type: ActionType.SetHourlyRate,\n                                    payload: {\n                                        id,\n                                        data: event.target.value\n                                    }\n                                });\n                            }}\n                            placeholder=\"0.00\"\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        $\n                                    </InputAdornment>\n                                ),\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        per hour\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Grid>\n                    <Grid item style={{ flex: 1 }}></Grid>\n                    <Grid item sm={4} xs={12}>\n                        Salary:{' '}\n                        <strong>\n                            $\n                            {salary\n                                .toFixed(2)\n                                .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\n                        </strong>{' '}\n                        / year\n                        <Box>\n                            <Button\n                                onClick={() =>\n                                    dispatch({\n                                        type: ActionType.RemoveSalary,\n                                        payload: {\n                                            id\n                                        }\n                                    })\n                                }\n                            >\n                                Remove\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Paper>\n    );\n};\n\nexport default React.memo(SalaryBox);\n","import React, { useState } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport {\n    Button,\n    AppBar,\n    Toolbar,\n    SvgIcon,\n    Typography,\n    Container,\n    Grid,\n    Grow,\n    Slider,\n    TextField,\n    InputAdornment\n} from '@material-ui/core';\nimport { AddCircleOutline } from '@material-ui/icons';\nimport { ReactComponent as CeleryIcon } from './CeleryIcon.svg';\nimport styled from 'styled-components';\n\nimport SalaryBox from './SalaryBox';\nimport useStore, { ActionType } from './hooks/useStore';\n\nconst Layout = styled.div`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst TopNav = styled(Toolbar)`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst App: React.FC = () => {\n    const [state, dispatch] = useStore();\n    // TODO: Move these to central store for persistence\n    const [minSalary, setMinSalary] = useState(0);\n    const [maxSalary, setMaxSalary] = useState(75000);\n\n    return (\n        <Layout>\n            <AppBar position=\"static\">\n                <TopNav>\n                    <div />\n                    <div>\n                        <Typography\n                            variant=\"h6\"\n                            component=\"h1\"\n                            style={{\n                                fontWeight: 'bold'\n                            }}\n                        >\n                            Celery\n                            <SvgIcon\n                                viewBox=\"0 0 512 512\"\n                                style={{ marginLeft: 10, verticalAlign: 'sub' }}\n                            >\n                                <CeleryIcon />\n                            </SvgIcon>\n                        </Typography>\n                    </div>\n                </TopNav>\n            </AppBar>\n\n            <Container\n                style={{\n                    height: 'calc(100vh - 64px)',\n                    maxHeight: 'calc(100vh - 64px)',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    padding: '3em 0 1em'\n                }}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    spacing={2}\n                    style={{ flex: 1 }}\n                >\n                    {Object.entries(state.salaries).map(([id, salary]) => (\n                        <Grid item key={id}>\n                            <Grow in>\n                                <SalaryBox\n                                    key={id}\n                                    id={id}\n                                    dispatch={dispatch}\n                                    {...salary}\n                                />\n                            </Grow>\n                        </Grid>\n                    ))}\n\n                    <Grid item>\n                        <Button\n                            size=\"large\"\n                            color=\"primary\"\n                            onClick={() =>\n                                dispatch({ type: ActionType.AddSalary })\n                            }\n                            endIcon={<AddCircleOutline />}\n                        >\n                            Add Salary\n                        </Button>\n                    </Grid>\n                </Grid>\n\n                <Grid item>\n                    <Grid container spacing={2} style={{ marginTop: '3em' }}>\n                        <Grid item>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                Min\n                            </Typography>\n                        </Grid>\n\n                        <Grid item style={{ flex: 1 }}>\n                            <Slider\n                                color=\"secondary\"\n                                track={false}\n                                min={minSalary}\n                                max={maxSalary}\n                                value={Object.values(state.salaries).map(\n                                    ({ salary }) => salary\n                                )}\n                                valueLabelFormat={(val: number) => {\n                                    // TODO: 1 dec place if exists\n                                    if (val >= 1000000) {\n                                        return `${Math.floor(val / 1000000)}M`;\n                                    } else if (val >= 1000) {\n                                        return `${Math.floor(val / 1000)}K`;\n                                    } else {\n                                        return `$${val}`;\n                                    }\n                                }}\n                                valueLabelDisplay=\"on\"\n                            />\n                        </Grid>\n\n                        <Grid item>\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                Max\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container justify=\"space-between\">\n                        <Grid item>\n                            <TextField\n                                name=\"minSalary\"\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                    setMinSalary(Number(e.target.value));\n                                }}\n                                value={minSalary}\n                                placeholder=\"0.00\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            $\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                name=\"maxSalary\"\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                    setMaxSalary(Number(e.target.value));\n                                }}\n                                value={maxSalary}\n                                placeholder=\"0.00\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            $\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default process.env.NODE_ENV === 'development' ? hot(App) : App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n    ThemeProvider,\n    createMuiTheme,\n    responsiveFontSizes\n} from '@material-ui/core/styles';\n\n// A custom theme for this app\nlet theme = createMuiTheme({\n    palette: {\n        common: { black: 'rgba(0, 0, 0, 1)', white: '#fff' },\n        background: {\n            paper: 'rgba(255, 255, 255, 1)',\n            default: 'rgba(239, 239, 239, 1)'\n        },\n        primary: {\n            light: 'rgba(175, 238, 107, 1)',\n            main: 'rgba(97, 186, 0, 1)',\n            dark: 'rgba(65, 117, 5, 1)',\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: 'rgba(175, 238, 107, 1)',\n            main: 'rgba(97, 186, 0, 1)',\n            dark: 'rgba(65, 117, 5, 1)',\n            contrastText: '#fff'\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: '#d32f2f',\n            contrastText: '#fff'\n        },\n        text: {\n            primary: 'rgba(59, 59, 59, 0.87)',\n            secondary: 'rgba(73, 73, 73, 0.6)',\n            disabled: 'rgba(0, 0, 0, 0.38)',\n            hint: 'rgba(0, 0, 0, 0.38)'\n        }\n    }\n});\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}